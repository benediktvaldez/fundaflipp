// libs/mixins.less

// ==========================================================================
// Basic
// ==========================================================================

.clearfix() when not (@using-ieclasses) {
	&:before,
	&:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
	*zoom: 1;
}

.clearfix() when (@using-ieclasses) {
	&:before,
	&:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
	.ie6 &, .ie7 & {
		zoom: 1;
	}
}
.clearfix {
	.clearfix();
}

.size(@width,@height) {
	width: @width;
	height: @height;
}
.size(@size) {
	.size(@size,@size);
}

.center-block() {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

.inline-block() when (@using-ieclasses) {
	display: inline-block;
	.ie7 & {
		display: inline;
		zoom: 1;
	}
}

.inline-block() when not (@using-ieclasses) {
	display: inline-block;
	*display: inline;
	*zoom: 1;
}

.box-sizing(@boxmodel) {
	-webkit-box-sizing: @boxmodel;
	-moz-box-sizing: @boxmodel;
	box-sizing: @boxmodel;
}

.border-box() {
	.box-sizing(border-box);
	*behavior: url("boxsizing.htc"); // IE6 & IE7
}

.border-radius(@border-radius: @radius) {
	-webkit-border-radius: @border-radius;
	-moz-border-radius: @border-radius;
	border-radius: @border-radius;
}

.borders(@top: @color-border, @right: @color-border, @bottom: @color-border, @left: @color-border, @width: 1px, @style: solid) {
	border-top: @width @style @top;
	border-right: @width @style @right;
	border-bottom: @width @style @bottom;
	border-left: @width @style @left;
}

.opacity(@opacity: 0.5) when (@using-filters) {
	-webkit-opacity: @opacity;
	-khtml-opacity: @opacity;
	-moz-opacity: @opacity;
	opacity: @opacity;
	@opperc: @opacity * 100;
	filter: ~"alpha(opacity=@{opperc})"; // IE6 & IE7
	-ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(opacity=@{opperc})"; // IE8+
}
.opacity(@opacity: 0.5) when not (@using-filters) {
	-webkit-opacity: @opacity;
	-khtml-opacity: @opacity;
	-moz-opacity: @opacity;
	opacity: @opacity;
	@opperc: @opacity * 100;
}

.user-select(@select:none) {
	-webkit-user-select: @select;
	-moz-user-select: @select;
	-o-user-select: @select;
	user-select: @select;
}

.background-clip(@clip) {
	-webkit-background-clip: @clip;
	-moz-background-clip: @clip;
	background-clip: @clip;
}

.background-origin(@origin) {
	-webkit-background-origin: @origin;
	-moz-background-origin: @origin;
	background-origin: @origin;
}

.background-size(@size){
	-webkit-background-size: @size;
	-moz-background-size: @size;
	-o-background-size: @size;
	background-size: @size;
}

.perspective(@perspective) {
	-webkit-perspective: @perspective;
	-moz-perspective: @perspective;
	-ms-perspective: @perspective;
	-o-perspective: @perspective;
	perspective: @perspective;
}
.perspective-origin(@perspective-origin) {
	-webkit-perspective-origin: @perspective-origin;
	-moz-perspective-origin: @perspective-origin;
	-ms-perspective-origin: @perspective-origin;
	-o-perspective-origin: @perspective-origin;
	perspective-origin: @perspective-origin;
}

// ==========================================================================
// Text/content related
// ==========================================================================

.font-face( @family-name, @font-path, @font-weight:normal, @font-style:normal, @include-svg:false ) when not (@include-svg) {
	@font-face {
	    font-family: @family-name;
	    src: url('@{font-path}.eot');
	    src: url('@{font-path}.eot?#iefix') format('embedded-opentype'),
	         url('@{font-path}.woff') format('woff'),
	         url('@{font-path}.ttf') format('truetype');
	    font-weight: @font-weight;
	    font-style: @font-style;
	}
}

.font-face( @family-name, @font-path, @font-weight:normal, @font-style:normal, @include-svg:false ) when (@include-svg) {
	@font-face {
	    font-family: @family-name;
	    src: url('@{font-path}.eot');
	    src: url('@{font-path}.eot?#iefix') format('embedded-opentype'),
	         url('@{font-path}.woff') format('woff'),
	         url('@{font-path}.ttf') format('truetype'),
			 url('@{font-path}.svg#@{family-name}') format('svg');
	    font-weight: @font-weight;
	    font-style: @font-style;
	}
}

.font-size-ems(@target-px-size, @context-px-size:@font-size) {
	font-size: (@target-px-size / @context-px-size) * 1em;
}
.reset-list() {
	list-style-type: none;
	list-style-image: none;
	list-style-position: outside;
}

.text-on-bg(@color: @color-primary) when (lightness(@color) >= 50%) {
  background-color: @color-gray-dark;
}
.text-on-bg(@color: @color-primary) when (lightness(@color) < 50%) {
  background-color: @color-gray-lighter;
}
.text-on-bg(@color: @color-primary) {
  color: @color;
}

.text-overflow() {
	// Requires inline-block or block for proper styling
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

.columns(@width: (@page-width/3 - (@gutter*3)), @count: 0, @gap: @gutter, @rule-color: @color-border, @rule-style: solid, @rule-width: 0px) {
	-moz-column-width: @width;
	-moz-column-count: @count;
	-moz-column-gap: @gap;
	-moz-column-rule-color: @rule-color;
	-moz-column-rule-style: @rule-style;
	-moz-column-rule-width: @rule-width;
	-webkit-column-width: @width;
	-webkit-column-count: @count;
	-webkit-column-gap: @gap;
	-webkit-column-rule-color: @rule-color;
	-webkit-column-rule-style: @rule-style;
	-webkit-column-rule-width: @rule-width;
	column-width: @width;
	column-count: @count;
	column-gap: @gap;
	column-rule-color: @rule-color;
	column-rule-style: @rule-style;
	column-rule-width: @rule-width;
}

.mask-image(@url) {
	-webkit-mask-image: url(@url);
	-moz-mask-image: url(@url);
	-ms-mask-image: url(@url);
	-o-mask-image: url(@url);
	mask-image: url(@url);
}

// ==========================================================================
// Form element related
// ==========================================================================

.resizable(@direction: both) {
	// resize: horizontal | vertical | both
	resize: @direction;
	overflow: auto; // Safari fix
}

.placeholder(@color: @color-gray-light,@font-style:normal) {
	&:-moz-placeholder {
		color: @color;
		font-style: @font-style;
	}
	&:-ms-input-placeholder {
		color: @color;
		font-style: @font-style;
	}
	&::-webkit-input-placeholder {
		color: @color;
		font-style: @font-style;
	}
}

// ==========================================================================
// Box shadows
// ==========================================================================

.box-shadow(@shadow) {
	-webkit-box-shadow: @shadow;
	-moz-box-shadow: @shadow;
	box-shadow: @shadow;
}
.box-shadow(@shadow1,@shadow2) {
	@join: @shadow1,@shadow2;
	.box-shadow(@join);
}
.box-shadow(@shadow1,@shadow2,@shadow3) {
	@join: @shadow1,@shadow2,@shadow3;
	.box-shadow(@join);
}
.box-shadow(@shadow1,@shadow2,@shadow3,@shadow4) {
	@join: @shadow1,@shadow2,@shadow3,@shadow4;
	.box-shadow(@join);
}
.box-shadow(@shadow1,@shadow2,@shadow3,@shadow4,@shadow5) {
	@join: @shadow1,@shadow2,@shadow3,@shadow4,@shadow5;
	.box-shadow(@join);
}

// virkar ekki á dotLess, bara javascript
// .box-shadow(@shadowA, @shadowB:X, ...){
// 	@shadow: ~`"@{arguments}".replace(/[\[\]]|\,\sX/g, '')`;
// 	-webkit-box-shadow: @shadow;
// 	-moz-box-shadow: @shadow;
// 	box-shadow: @shadow;
// }

	// Shortcuts ============================================================
	.drop-shadow(@x: 0, @y: 1px, @blur: 2px, @spread: 0, @alpha: 0.3, @color: @color-black) {
		.box-shadow (@x @y @blur @spread fade(@color-black, (@alpha*100)));
	}
	.inner-shadow(@x: 0, @y: 1px, @blur: 2px, @spread: 0, @alpha: 0.3, @color: @color-black) {
		.box-shadow (inset @x @y @blur @spread fade(@color-black, (@alpha*100)));
	}
	// ======================================================================

// ==========================================================================
// Animation
// ==========================================================================

.animation(@anim) {
	-webkit-animation: @anim;
	-moz-animation: @anim;
	-ms-animation: @anim;
	-o-animation: @anim;
	animation: @anim;
}

// ==========================================================================
// Transitions
// ==========================================================================

.transition(@transition){
	-webkit-transition: @transition;
	-khtml-transition: @transition;
	-moz-transition: @transition;
	-ms-transition: @transition;
	-o-transition: @transition;
	transition: @transition;
}
.transition(@transition1,@transition2) {
	@join: @transition1,@transition2;
	.transition(@join);
}
.transition(@transition1,@transition2,@transition3) {
	@join: @transition1,@transition2,@transition3;
	.transition(@join);
}
.transition(@transition1,@transition2,@transition3,@transition4) {
	@join: @transition1,@transition2,@transition3,@transition4;
	.transition(@join);
}
.transition(@transition1,@transition2,@transition3,@transition4,@transition5) {
	@join: @transition1,@transition2,@transition3,@transition4,@transition5;
	.transition(@join);
}

// virkar ekki á dotLess, bara javascript
// .transition(@transitionA, @transitionB:X, ...){
// 	@transition: ~`"@{arguments}".replace(/[\[\]]|\,\sX/g, '')`;
// 	-webkit-transition: @transition;
// 	-khtml-transition: @transition;
// 	-moz-transition: @transition;
// 	-ms-transition: @transition;
// 	-o-transition: @transition;
// 	transition: @transition;
// }

.transition-delay(@delay) {
	-webkit-transition-delay: @delay;
	-khtml-transition-delay: @delay;
	-moz-transition-delay: @delay;
	-ms-transition-delay: @delay;
	-o-transition-delay: @delay;
	transition-delay: @delay;
}

.transition-property(@property) {
	-webkit-transition-property: @property;
	-khtml-transition-property: @property;
	-moz-transition-property: @property;
	-ms-transition-property: @property;
	-o-transition-property: @property;
	transition-property: @property;
}

.transition-duration(@duration) {
	-webkit-transition-duration: @duration;
	-khtml-transition-duration: @duration;
	-moz-transition-duration: @duration;
	-ms-transition-duration: @duration;
	-o-transition-duration: @duration;
	transition-duration: @duration;
}

.transition-timing-function(@timing-function) {
	-webkit-transition-timing-function: @timing-function;
	-khtml-transition-timing-function: @timing-function;
	-moz-transition-timing-function: @timing-function;
	-ms-transition-timing-function: @timing-function;
	-o-transition-timing-function: @timing-function;
	transition-timing-function: @timing-function;
}

// ==========================================================================
// Transformations
// ==========================================================================

.transform(@str) {
	-webkit-transform: @str;
	-moz-transform: @str;
	-ms-transform: @str;
	-o-transform: @str;
	transform: @str;
}

.transform-origin(@x: left, @y: top) {
	-webkit-transform-origin: @x @y;
	-moz-transform-origin: @x @y;
	-ms-transform-origin: @x @y;
	-o-transform-origin: @x @y;
	transform-origin: @x @y;
}

.transform-style(@style) {
	-webkit-transform-style: @style;
	-moz-transform-style: @style;
	-ms-transform-style: @style;
	-o-transform-style: @style;
	transform-style: @style;
}

.backface-visibility(@string) {
	-webkit-backface-visibility: @string;
	-moz-backface-visibility: @string;
	-ms-backface-visibility: @string;
	-o-backface-visibility: @string;
	backface-visibility: @string;
}

	// Shortcuts ============================================================
	.translate(@x: 0, @y: 0) {
		.transform (translate(@x, @y));
	}
	.translate3d(@x: 0, @y: 0, @z: 0) {
		.transform (translate3d(@x, @y, @z));
	}
	.translateX(@x: 0) {
		.transform (translateX(@x));
	}
	.translateY(@y: 0) {
		.transform (translateY(@y));
	}
	.translateZ(@z: 0) {
		.transform (translateZ(@z));
	}

	.scale(@x:1) {
		.transform (scale(@x));
	}
	.scale(@x:1, @y:1) {
		.transform (scale(@x, @y));
	}
	.scale3d(@x:1, @y:1, @z:1) {
		.transform (scale3d(@x, @y, @z));
	}
	.scaleX(@x:1) {
		.transform (scaleX(@x));
	}
	.scaleY(@y:1) {
		.transform (scaleY(@y));
	}
	.scaleZ(@z:1) {
		.transform (scaleZ(@z));
	}

	.rotate(@angle:0) {
		.transform (rotate(@angle));
	}
	.rotate3d(@x:0, @y:0, @z:0, @angle:0) {
		.transform (rotate3d(@x, @y, @z, @angle));
	}
	.rotateX(@x:0) {
		.transform (rotateX(@x));
	}
	.rotateY(@y:0) {
		.transform (rotateY(@y));
	}
	.rotateZ(@z:0) {
		.transform (rotateZ(@z));
	}

	.skew(@angle:0) {
		.transform (skew(@angle));
	}
	.skew(@x: 0, @y: 0) {
		.transform (skew(@x, @y));
	}
	.skewX(@x:0) {
		.transform (skewX(@x));
	}
	.skewY(@y:0) {
		.transform (skewY(@y));
	}
	// ======================================================================

// ==========================================================================
// Gradient
// ==========================================================================

#gradient {
	.horizontal(@start-color: @color-gray-lighter, @end-color: @color-white) when (@using-filters) {
		background-color: @end-color;
		background-repeat: repeat-x;
		background-image: -khtml-gradient(linear, left top, right top, from(@start-color), to(@end-color)); // Konqueror
		background-image: -moz-linear-gradient(left, @start-color, @end-color); // FF 3.6+
		background-image: -ms-linear-gradient(left, @start-color, @end-color); // IE10
		background-image: -webkit-gradient(linear, left top, right top, color-stop(0%, @start-color), color-stop(100%, @end-color)); // Safari 4+, Chrome 2+
		background-image: -webkit-linear-gradient(left, @start-color, @end-color); // Safari 5.1+, Chrome 10+
		background-image: -o-linear-gradient(left, @start-color, @end-color); // Opera 11.10
		background-image: -ms-linear-gradient(left, @start-color 0%, @end-color 100%);  // IE10+
		background-image: linear-gradient(left, @start-color, @end-color); // the standard
		filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)",@start-color,@end-color)); // IE6 & IE7
		-ms-filter: %("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)",@start-color,@end-color); // IE8+
	}
	.vertical(@start-color: @color-gray-lighter, @end-color: @color-white) when (@using-filters)  {
		background-color: @end-color;
		background-repeat: repeat-x;
		background-image: -khtml-gradient(linear, left top, left bottom, from(@start-color), to(@end-color)); // Konqueror
		background-image: -moz-linear-gradient(@start-color, @end-color); // FF 3.6+
		background-image: -ms-linear-gradient(@start-color, @end-color); // IE10
		background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, @start-color), color-stop(100%, @end-color)); // Safari 4+, Chrome 2+
		background-image: -webkit-linear-gradient(@start-color, @end-color); // Safari 5.1+, Chrome 10+
		background-image: -o-linear-gradient(@start-color, @end-color); // Opera 11.10
		background-image: -ms-linear-gradient(top, @start-color 0%, @end-color 100%);  // IE10+
		background-image: linear-gradient(@start-color, @end-color); // the standard
		filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@start-color,@end-color)); // IE6 & IE7
		-ms-filter: %("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@start-color,@end-color); // IE8+
	}
	.horizontal(@start-color: @color-gray-lighter, @end-color: @color-white) when not (@using-filters) {
		background-color: @end-color;
		background-repeat: repeat-x;
		background-image: -khtml-gradient(linear, left top, right top, from(@start-color), to(@end-color)); // Konqueror
		background-image: -moz-linear-gradient(left, @start-color, @end-color); // FF 3.6+
		background-image: -ms-linear-gradient(left, @start-color, @end-color); // IE10
		background-image: -webkit-gradient(linear, left top, right top, color-stop(0%, @start-color), color-stop(100%, @end-color)); // Safari 4+, Chrome 2+
		background-image: -webkit-linear-gradient(left, @start-color, @end-color); // Safari 5.1+, Chrome 10+
		background-image: -o-linear-gradient(left, @start-color, @end-color); // Opera 11.10
		background-image: -ms-linear-gradient(left, @start-color 0%, @end-color 100%);  // IE10+
		background-image: linear-gradient(left, @start-color, @end-color); // the standard
	}
	.vertical(@start-color: @color-gray-lighter, @end-color: @color-white) when not (@using-filters)  {
		background-color: @end-color;
		background-repeat: repeat-x;
		background-image: -khtml-gradient(linear, left top, left bottom, from(@start-color), to(@end-color)); // Konqueror
		background-image: -moz-linear-gradient(@start-color, @end-color); // FF 3.6+
		background-image: -ms-linear-gradient(@start-color, @end-color); // IE10
		background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, @start-color), color-stop(100%, @end-color)); // Safari 4+, Chrome 2+
		background-image: -webkit-linear-gradient(@start-color, @end-color); // Safari 5.1+, Chrome 10+
		background-image: -o-linear-gradient(@start-color, @end-color); // Opera 11.10
		background-image: -ms-linear-gradient(top, @start-color 0%, @end-color 100%);  // IE10+
		background-image: linear-gradient(@start-color, @end-color); // the standard
	}
}

	// Shortcuts ============================================================
	.gradient-horizontal(@start-color: @color-gray-lighter,@end-color: @color-white) {
		#gradient > .horizontal(@start-color,@end-color);
	}
	.gradient-vertical(@start-color: @color-gray-lighter,@end-color: @color-white) {
		#gradient > .vertical(@start-color,@end-color);
	}
	// ======================================================================

// ==========================================================================
// Arrows
// ==========================================================================

// pos: up | down | left | right;
.arrow(@pos, @size, @bg-color) {
	width: 0;
	height: 0;
	border: @size solid transparent;
	._abbor_el( @pos, @bg-color );
}

.arrowbox(@pos, @size, @bg-color, @offset:50%) {

	@after-margin: @size * -1px;

	position: relative;
	background: @bg-color;

	&:after,
	&:before {
		._abpos(@pos);
		border: solid transparent;
		content: " ";
		height: 0;
		width: 0;
		position: absolute;
		pointer-events: none;
	}

	&:after {
		border-color: transparent;
		._abbor_el(@pos, @bg-color);
		border-width: @size;
		._abpos_el(@pos, @size, @offset);
		._abmar_el(@pos, @after-margin);
	}

}

.arrowbox(@pos, @size, @bg-color, @border-width, @border-color, @offset:50%) {

	@before-margin: (@size + round(@border-width * 1.41421356)) * -1px;

	.arrowbox(@pos, @size, @bg-color, @offset);

	border: @border-width solid @border-color;

	&:before {
		border-color: transparent;
		._abbor_el(@pos, @border-color);
		border-width: @before-margin * -1;
		._abpos_el(@pos, @size, @offset);
		._abmar_el(@pos, @before-margin);
	}

}

._abpos( @pos ) when ( @pos = left ) { right: 100%; }
._abpos( @pos ) when ( @pos = right ) { left: 100%; }
._abpos( @pos ) when ( @pos = up ) { bottom: 100%; }
._abpos( @pos ) when ( @pos = down ) { top: 100%; }

._abpos_el( @pos, @size, @offset ) when ( @offset = 0 ) and ( @pos = left ) { top: @size; }
._abpos_el( @pos, @size, @offset ) when ( @offset = 0 ) and ( @pos = right ) { top: @size; }
._abpos_el( @pos, @size, @offset ) when ( @offset = 0 ) and ( @pos = up ) { left: @size; }
._abpos_el( @pos, @size, @offset ) when ( @offset = 0 ) and ( @pos = down ) { left: @size; }

._abpos_el( @pos, @size, @offset ) when not ( @offset = 0 ) and not ( ispixel(@offset) ) and ( @pos = left ) { top: @offset; }
._abpos_el( @pos, @size, @offset ) when not ( @offset = 0 ) and not ( ispixel(@offset) ) and ( @pos = right ) { top: @offset; }
._abpos_el( @pos, @size, @offset ) when not ( @offset = 0 ) and not ( ispixel(@offset) ) and ( @pos = up ) { left: @offset; }
._abpos_el( @pos, @size, @offset ) when not ( @offset = 0 ) and not ( ispixel(@offset) ) and ( @pos = down ) { left: @offset; }

._abpos_el( @pos, @size, @offset ) when not ( @offset = 0 ) and ( ispixel(@offset) ) and ( @pos = left ) { top: @offset + @size; }
._abpos_el( @pos, @size, @offset ) when not ( @offset = 0 ) and ( ispixel(@offset) ) and ( @pos = right ) { top: @offset + @size; }
._abpos_el( @pos, @size, @offset ) when not ( @offset = 0 ) and ( ispixel(@offset) ) and ( @pos = up ) { left: @offset + @size; }
._abpos_el( @pos, @size, @offset ) when not ( @offset = 0 ) and ( ispixel(@offset) ) and ( @pos = down ) { left: @offset + @size; }

._abbor_el( @pos, @color ) when ( @pos = left ) { border-right-color: @color; }
._abbor_el( @pos, @color ) when ( @pos = right ) { border-left-color: @color; }
._abbor_el( @pos, @color ) when ( @pos = up ) { border-bottom-color: @color; }
._abbor_el( @pos, @color ) when ( @pos = down ) { border-top-color: @color; }

._abmar_el( @pos, @margin ) when ( @pos = left ) { margin-top: @margin; }
._abmar_el( @pos, @margin ) when ( @pos = right ) { margin-top: @margin; }
._abmar_el( @pos, @margin ) when ( @pos = up ) { margin-left: @margin; }
._abmar_el( @pos, @margin ) when ( @pos = down ) { margin-left: @margin; }
